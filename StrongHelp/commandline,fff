PackIt - Command line utility
#fH2:Packing from the command line using PackIt
#Parent !Root

#fH4:Overview

PackIt ships with a command line utility to allow you to create packages from anything that can run a command line.

Once PackIt has been seen by the filer run

#fCode
\<PackIt$Dir>.packitcmd create \<to_folder> \<control_file> \<copyright_file> pack \<file_or_folder>] to \<install_directory> [flags \<flags>] [--force] [--check] [--exclude \<exleafname>] [--add-to-copyright \<filename>]  [\<control_field=value>]
#f
Where
   \<to_folder> is the location to create the package
   \<control_file> is the location of the control file
   \<copyright_file> is the location of the copyright file
   \<file_or_folder> is a file or folder to include in the package
   \<install_directory> is the location the file should be placed in the package.
   [flags \<flags>] optionally allows the component flags to be set on this item
   [--force or -f] optional flag to force overwriting of an existing package
   [--check or -c] check the control file, but don't write anything.
   [--exclude or -x] A file or directory with the given leafname is excluded from the package.
   [--add-to-copyright -a \<filename>] add contents of the given file to the copyright text.
   [\<control_field=value]> optionally override a field in the control file.

The pack, to, flags arguments can be repeated multiple time to add files to the package.
The control_field=value can be repeated each time with a different control_file name.

The command outputs a package file with the name:
    \<package_name>_\<version> in the \<to_folder> directory.

The package name and version are retrieved from the control file.

A simple example
#fCode
  \<PackIt$Dir>.packitcmd create @ RiscPkg.Control RiscPkg.Copyright pack !MyApp to Apps.Misc
#f

*Note* The PackIt UI provides options to export the control file, copyright and a sample packitcmd command in an obey file.


